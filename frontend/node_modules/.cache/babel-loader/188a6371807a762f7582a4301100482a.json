{"ast":null,"code":"var _jsxFileName = \"/Users/chenlicheng/Desktop/Ecommerce/frontend/src/components/ChatBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = window.location.host.indexOf('localhost') >= 0 ? 'http://127.0.0.1:5000' : window.location.host;\n\nfunction ChatBox(props) {\n  _s();\n\n  const {\n    userInfo\n  } = props;\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [messageBody, setMessageBody] = useState('');\n  const [messages, setMessages] = useState([{\n    name: 'Admin',\n    body: 'Hello there, Please ask your questions.'\n  }]);\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: 'smooth'\n      });\n    }\n\n    if (socket) {\n      socket.emit('onLogin', {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin\n      });\n      socket.on('message', data => {\n        setMessages([...messages, {\n          body: data.body,\n          name: data.name\n        }]);\n      });\n    }\n  }, [messages, isOpen, socket, userInfo._id, userInfo.name, userInfo.isAdmin]);\n\n  const supportHandler = () => {\n    setIsOpen(true);\n    console.log(ENDPOINT);\n    const sk = socketIOClient(ENDPOINT);\n    setSocket(sk);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!messageBody.trim()) {\n      alert('Error. Please type message.');\n    } else {\n      setMessages([...messages, {\n        body: messageBody,\n        name: userInfo.name\n      }]);\n      setMessageBody('');\n      setTimeout(() => {\n        socket.emit('onMessage', {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: userInfo._id\n        });\n      }, 1000);\n    }\n  };\n\n  const closeHandler = () => {\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox\",\n    children: !isOpen ?\n    /*#__PURE__*/\n    //close by default\n    _jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: supportHandler,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-support\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Support \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: closeHandler,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 70\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        ref: uiMessagesRef,\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: `${msg.name}: `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), \" \", msg.body]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitHandler,\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: messageBody,\n            onChange: e => setMessageBody(e.target.value),\n            type: \"text\",\n            placeholder: \"please type message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatBox, \"wDE5HzJ+CJSiRKeB6+h9DFX2ykY=\");\n\n_c = ChatBox;\nexport default ChatBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"sources":["/Users/chenlicheng/Desktop/Ecommerce/frontend/src/components/ChatBox.js"],"names":["React","useEffect","useRef","useState","socketIOClient","ENDPOINT","window","location","host","indexOf","ChatBox","props","userInfo","socket","setSocket","uiMessagesRef","isOpen","setIsOpen","messageBody","setMessageBody","messages","setMessages","name","body","current","scrollBy","top","clientHeight","left","behavior","emit","_id","isAdmin","on","data","supportHandler","console","log","sk","submitHandler","e","preventDefault","trim","alert","setTimeout","closeHandler","map","msg","index","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\n\nconst ENDPOINT = window.location.host.indexOf('localhost') >= 0 ? 'http://127.0.0.1:5000' : window.location.host;\n\nfunction ChatBox(props) {\n    const { userInfo } = props;\n    const [socket, setSocket] = useState(null);\n    const uiMessagesRef = useRef(null);\n    const [isOpen, setIsOpen] = useState(false);\n    const [messageBody, setMessageBody] = useState('');\n    const [messages, setMessages] = useState([{ name: 'Admin', body: 'Hello there, Please ask your questions.' },]);\n\n    useEffect(() => {\n        if (uiMessagesRef.current) {\n            uiMessagesRef.current.scrollBy({\n                top: uiMessagesRef.current.clientHeight,\n                left: 0,\n                behavior: 'smooth',\n            });\n        }\n        if (socket) {\n            socket.emit('onLogin', {\n                _id: userInfo._id,\n                name: userInfo.name,\n                isAdmin: userInfo.isAdmin,\n            });\n            socket.on('message', (data) => {\n                setMessages([...messages, { body: data.body, name: data.name }]);\n            });\n        }\n    }, [messages, isOpen, socket, userInfo._id, userInfo.name, userInfo.isAdmin]);\n\n    const supportHandler = () => {\n        setIsOpen(true);\n        console.log(ENDPOINT);\n        const sk = socketIOClient(ENDPOINT);\n        setSocket(sk);\n    };\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (!messageBody.trim()) {\n            alert('Error. Please type message.');\n        } else {\n            setMessages([...messages, { body: messageBody, name: userInfo.name }]);\n            setMessageBody('');\n            setTimeout(() => {\n                socket.emit('onMessage', {\n                    body: messageBody,\n                    name: userInfo.name,\n                    isAdmin: userInfo.isAdmin,\n                    _id: userInfo._id,\n                });\n            }, 1000);\n        }\n    };\n    const closeHandler = () => {\n        setIsOpen(false);\n    };\n    return (\n        <div className=\"chatbox\">\n            {!isOpen ? ( //close by default\n                <button type=\"button\" onClick={supportHandler}>\n                    <i className=\"fa fa-support\" />\n                </button>\n            ) : (\n                <div className=\"card card-body\">\n                    <div className=\"row\">\n                        <strong>Support </strong>\n                        <button type=\"button\" onClick={closeHandler}><i className=\"fa fa-close\" /></button>\n                    </div>\n                    <ul ref={uiMessagesRef}>\n                        {messages.map((msg, index) => (\n                            <li key={index}>\n                                <strong>{`${msg.name}: `}</strong> {msg.body}\n                            </li>\n                        ))}\n                    </ul>\n                    <div>\n                        <form onSubmit={submitHandler} className=\"row\">\n                            <input value={messageBody} onChange={e => setMessageBody(e.target.value)} type=\"text\" placeholder=\"please type message\"/>\n                            <button type=\"submit\">Send</button>\n                        </form>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ChatBox;\n"]},"metadata":{},"sourceType":"module"}