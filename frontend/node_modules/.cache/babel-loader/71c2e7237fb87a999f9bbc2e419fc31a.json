{"ast":null,"code":"var _jsxFileName = \"/Users/chenlicheng/Desktop/Ecommerce/frontend/src/screens/ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ProfileScreen() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [sellerName, setSellerName] = useState('');\n  const [sellerLogo, setSellerLogo] = useState('');\n  const [sellerDescription, setSellerDescription] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const userDetails = useSelector(state => state.userDetails);\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    userInfo\n  } = userSignin;\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const {\n    success: successUpdate,\n    error: errorUpdate,\n    loading: loadingUpdate\n  } = userUpdateProfile; //rename\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!user) {\n      dispatch({\n        type: USER_UPDATE_PROFILE_RESET\n      });\n      dispatch(detailsUser(userInfo._id));\n    } else {\n      //from backend\n      setName(user.name);\n      setEmail(user.email);\n\n      if (user.seller) {\n        setSellerName(user.seller.name);\n        setSellerLogo(user.seller.logo);\n        setSellerDescription(user.seller.description);\n      }\n    }\n  }, [dispatch, userInfo._id, user]);\n\n  const submitHandler = e => {\n    //update pw\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('Password not match');\n    } else {\n      dispatch(updateUserProfile({\n        userId: user._id,\n        name,\n        email,\n        password,\n        sellerName,\n        sellerLogo,\n        sellerDescription\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 30\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 43\n        }, this), errorUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n          variant: \"danger\",\n          children: errorUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 42\n        }, this), successUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n          variant: \"success\",\n          children: \"Successfully Updated Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            placeholder: \"Enter password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            placeholder: \"Confirm password\",\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), user.isSeller && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Seller\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sellerName\",\n              children: \"Seller Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"sellerName\",\n              placeholder: \"Enter Seller Name\",\n              value: sellerName,\n              onChange: e => setSellerName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sellerLogo\",\n              children: \"Seller Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"sellerLogo\",\n              placeholder: \"Enter Seller Logo\",\n              value: sellerLogo,\n              onChange: e => setSellerLogo(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sellerDescription\",\n              children: \"Seller Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"sellerDescription\",\n              placeholder: \"Enter Seller Description\",\n              value: sellerDescription,\n              onChange: e => setSellerDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfileScreen, \"d+XesbgDd72x8RwmY6WkTDiV1P0=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["/Users/chenlicheng/Desktop/Ecommerce/frontend/src/screens/ProfileScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","detailsUser","updateUserProfile","LoadingBox","MessageBox","USER_UPDATE_PROFILE_RESET","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","sellerName","setSellerName","sellerLogo","setSellerLogo","sellerDescription","setSellerDescription","userSignin","state","userDetails","userUpdateProfile","userInfo","loading","error","user","success","successUpdate","errorUpdate","loadingUpdate","dispatch","type","_id","seller","logo","description","submitHandler","e","preventDefault","alert","userId","target","value","isSeller"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\n\nfunction ProfileScreen() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [sellerName, setSellerName] = useState('');\n    const [sellerLogo, setSellerLogo] = useState('');\n    const [sellerDescription, setSellerDescription] = useState('');\n    const userSignin = useSelector(state => state.userSignin);\n    const userDetails = useSelector(state => state.userDetails);\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n    const { userInfo } = userSignin;\n    const { loading, error, user } = userDetails;\n    const { success: successUpdate, error: errorUpdate, loading: loadingUpdate } = userUpdateProfile; //rename\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if(!user){\n            dispatch({ type: USER_UPDATE_PROFILE_RESET });\n            dispatch(detailsUser(userInfo._id));\n        } else { //from backend\n            setName(user.name);\n            setEmail(user.email);\n            if (user.seller) {\n                setSellerName(user.seller.name);\n                setSellerLogo(user.seller.logo);\n                setSellerDescription(user.seller.description);\n            }\n        }\n    }, [dispatch, userInfo._id, user]);\n    const submitHandler = e => { //update pw\n        e.preventDefault();\n        if (password !== confirmPassword){\n            alert('Password not match');\n        } else {\n            dispatch(updateUserProfile({\n                userId: user._id, name, email, password, sellerName, sellerLogo, sellerDescription\n            }))\n        }\n    }\n    return (\n        <div>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>User Profile</h1>\n                </div>\n                {loading ? ( <LoadingBox />\n                ) : error ? ( <MessageBox variant=\"danger\">{error}</MessageBox>\n                ) : (\n                    <>\n                        {loadingUpdate && <LoadingBox />}\n                        {errorUpdate && (<MessageBox variant=\"danger\">{errorUpdate}</MessageBox>)}\n                        {successUpdate && (<MessageBox variant=\"success\">Successfully Updated Profile</MessageBox>)}\n                        <div>\n                            <label htmlFor=\"name\">Name</label>\n                            <input type=\"text\" id=\"name\" placeholder=\"Enter name\" value={name} onChange={e => setName(e.target.value)} />\n                        </div>\n                        <div>\n                            <label htmlFor=\"email\">Email</label>\n                            <input type=\"email\" id=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.target.value)} />\n                        </div>\n                        <div>\n                            <label htmlFor=\"password\">Password</label>\n                            <input type=\"password\" id=\"password\" placeholder=\"Enter password\" onChange={e => setPassword(e.target.value)} />\n                        </div>\n                        <div>\n                            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                            <input type=\"password\" id=\"confirmPassword\" placeholder=\"Confirm password\" onChange={e => setConfirmPassword(e.target.value)} />\n                        </div>\n                        {user.isSeller && (\n                            <>\n                                <div>\n                                    <h2>Seller</h2>\n                                </div>\n                                <div>\n                                    <label htmlFor=\"sellerName\">Seller Name</label>\n                                    <input type=\"text\" id=\"sellerName\" placeholder=\"Enter Seller Name\" value={sellerName} onChange={e => setSellerName(e.target.value)} />\n                                </div>\n                                <div>\n                                    <label htmlFor=\"sellerLogo\">Seller Logo</label>\n                                    <input type=\"text\" id=\"sellerLogo\" placeholder=\"Enter Seller Logo\" value={sellerLogo} onChange={e => setSellerLogo(e.target.value)} />\n                                </div>\n                                <div>\n                                    <label htmlFor=\"sellerDescription\">Seller Description</label>\n                                    <input type=\"text\" id=\"sellerDescription\" placeholder=\"Enter Seller Description\" value={sellerDescription} onChange={e => setSellerDescription(e.target.value)} />\n                                </div>\n                            </>\n                        )}\n                        <div>\n                            <label />\n                            <button className=\"primary\" type=\"submit\">Update</button>\n                        </div>\n                    </>\n                )}\n            </form>\n        </div>\n    );\n}\n\nexport default ProfileScreen;\n"]},"metadata":{},"sourceType":"module"}