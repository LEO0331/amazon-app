{"ast":null,"code":"import axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_SUCCESS, ORDER_MINE_LIST_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      } //backend\n\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    }); //orderRouter.js: { message: 'New Order Created', order: createdOrder } sent to frontend\n\n    dispatch({\n      type: CART_EMPTY\n    }); //remove all items from cart\n\n    localStorage.removeItem('cartItems'); //<Link to={`/product/${item.product}`}>{item.name}</Link> in orderScreen will remove previous items from cart\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/orders/${orderId}`, {\n      //from backend\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAY_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    //put(url, body, options)\n    const {\n      data\n    } = await axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n      //sent to backend\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listOrderMine = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_MINE_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get('/api/orders/mine', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_MINE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_MINE_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/orders`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }); //console.log(data);\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    }); //order array from backend\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DELETE_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.delete(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELETE_FAIL,\n      payload: error.response && error.response.data.message //from backend delete('/:id') {message:Order not found}\n      ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/chenlicheng/Desktop/Ecommerce/frontend/src/actions/orderActions.js"],"names":["axios","CART_EMPTY","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_MINE_LIST_REQUEST","ORDER_MINE_LIST_SUCCESS","ORDER_MINE_LIST_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELETE_REQUEST","ORDER_DELETE_SUCCESS","ORDER_DELETE_FAIL","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get","payOrder","paymentResult","put","_id","listOrderMine","listOrders","deleteOrder","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_MINE_LIST_REQUEST,\n    ORDER_MINE_LIST_SUCCESS,\n    ORDER_MINE_LIST_FAIL,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_DELETE_REQUEST,\n    ORDER_DELETE_SUCCESS,\n    ORDER_DELETE_FAIL\n} from '../constants/orderConstants';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\n    try {\n        const {userSignin: { userInfo }} = getState();\n        const { data } = await axios.post('/api/orders', order, {\n            headers: { Authorization: `Bearer ${userInfo.token}` } //backend\n        });\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order }); //orderRouter.js: { message: 'New Order Created', order: createdOrder } sent to frontend\n        dispatch({ type: CART_EMPTY }); //remove all items from cart\n        localStorage.removeItem('cartItems'); //<Link to={`/product/${item.product}`}>{item.name}</Link> in orderScreen will remove previous items from cart\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n}\n\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\n    const {userSignin: { userInfo }} = getState();\n    try {\n        const { data } = await axios.get(`/api/orders/${orderId}`, { //from backend\n            headers: { Authorization: `Bearer ${userInfo.token}` }\n        });\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n};\n\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\n    const {userSignin: { userInfo }} = getState();\n    try { //put(url, body, options)\n        const { data } = await axios.put(`/api/orders/${order._id}/pay`, paymentResult, { //sent to backend\n            headers: { Authorization: `Bearer ${userInfo.token}` }\n        });\n        dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n};\n\nexport const listOrderMine = () => async (dispatch, getState) => {\n    dispatch({ type: ORDER_MINE_LIST_REQUEST });\n    const {userSignin: { userInfo }} = getState();\n    try { \n        const { data } = await axios.get('/api/orders/mine', { \n            headers: { Authorization: `Bearer ${userInfo.token}` }\n        });\n        dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: ORDER_MINE_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n    dispatch({ type: ORDER_LIST_REQUEST });\n    const {userSignin: { userInfo }} = getState();\n    try {\n        const { data } = await axios.get(`/api/orders`, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        //console.log(data);\n        dispatch({ type: ORDER_LIST_SUCCESS, payload: data }); //order array from backend\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n};\n\nexport const deleteOrder = (orderId) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\n    const {userSignin: { userInfo }} = getState();\n    try {\n        const { data } = await axios.delete(`/api/orders/${orderId}`, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: ORDER_DELETE_SUCCESS, payload: data }); \n    } catch (error) {\n        dispatch({\n            type: ORDER_DELETE_FAIL,\n            payload: error.response && error.response.data.message //from backend delete('/:id') {message:Order not found}\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}