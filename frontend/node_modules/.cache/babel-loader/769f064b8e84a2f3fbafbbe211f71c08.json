{"ast":null,"code":"var _jsxFileName = \"/Users/chenlicheng/Desktop/Ecommerce/frontend/src/components/CheckoutForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { payOrder } from '../actions/orderActions'; //https://stripe.com/docs/testing\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckoutForm = () => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const dispatch = useDispatch();\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order\n  } = orderDetails;\n\n  const handleSubmit = paymentResult => async event => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n\n    if (error) {\n      console.log('[error]', error);\n    } else {\n      console.log('[PaymentMethod]', paymentMethod);\n    }\n\n    dispatch(payOrder(order, paymentResult));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSuccess: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe || !elements,\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CheckoutForm, \"mdIaoXE23O/0HSFcoznntTRgkbI=\", false, function () {\n  return [useStripe, useElements, useDispatch, useSelector];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["/Users/chenlicheng/Desktop/Ecommerce/frontend/src/components/CheckoutForm.js"],"names":["React","CardElement","useStripe","useElements","useDispatch","useSelector","payOrder","CheckoutForm","stripe","elements","dispatch","orderDetails","state","order","handleSubmit","paymentResult","event","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,WAAhC,QAAkD,yBAAlD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,yBAAzB,C,CAEA;;;;AACA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,YAAY,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,YAAhB,CAAhC;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAYF,YAAlB;;AACA,QAAMG,YAAY,GAAIC,aAAD,IAAmB,MAAOC,KAAP,IAAiB;AACvDA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI,CAACT,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACD;;AAED,UAAM;AAACS,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAyB,MAAMX,MAAM,CAACY,mBAAP,CAA2B;AAC9DC,MAAAA,IAAI,EAAE,MADwD;AAE9DC,MAAAA,IAAI,EAAEb,QAAQ,CAACc,UAAT,CAAoBtB,WAApB;AAFwD,KAA3B,CAArC;;AAIA,QAAIiB,KAAJ,EAAW;AACTM,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBP,KAAvB;AACD,KAFD,MAEO;AACLM,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BN,aAA/B;AACD;;AACDT,IAAAA,QAAQ,CAACJ,QAAQ,CAACO,KAAD,EAAQE,aAAR,CAAT,CAAR;AACD,GAhBD;;AAkBA,sBACE;AAAM,IAAA,SAAS,EAAED,YAAjB;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,CAACN,MAAD,IAAW,CAACC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQH,CAhCD;;GAAMF,Y;UACaL,S,EACEC,W,EACAC,W,EACIC,W;;;KAJnBE,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { payOrder } from '../actions/orderActions';\n\n//https://stripe.com/docs/testing\nconst CheckoutForm = () => {\n    const stripe = useStripe();\n    const elements = useElements();\n    const dispatch = useDispatch();\n    const orderDetails = useSelector(state => state.orderDetails);\n    const { order } = orderDetails;\n    const handleSubmit = (paymentResult) => async (event) => {\n      event.preventDefault();\n      if (!stripe || !elements) {\n        return;\n      }\n  \n      const {error, paymentMethod} = await stripe.createPaymentMethod({\n        type: 'card',\n        card: elements.getElement(CardElement),\n      });\n      if (error) {\n        console.log('[error]', error);\n      } else {\n        console.log('[PaymentMethod]', paymentMethod);\n      }\n      dispatch(payOrder(order, paymentResult));\n    };\n  \n    return (\n      <form onSuccess={handleSubmit}>\n        <CardElement />\n        <button type=\"submit\" disabled={!stripe || !elements}>\n          Pay\n        </button>\n      </form>\n    );\n};\n\nexport default CheckoutForm;\n"]},"metadata":{},"sourceType":"module"}