{"ast":null,"code":"import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_ADD_ITEM_FAIL, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'; //https://redux.js.org/api/store#getstate\n\nexport const addToCart = (productId, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`/api/products/${productId}`); //const { cart: { cartItems } } = getState();\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      //add this product to the cart\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      product: data._id,\n      //add to database\n      //seller: data.seller,\n      qty\n    }\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems)); //store.js initial\n};\nexport const removeFromCart = productId => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: productId\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems)); //update local storage\n};\nexport const saveShippingAddress = data => dispatch => {\n  //data from ShippingAddress screen\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n};","map":{"version":3,"sources":["/Users/chenlicheng/Desktop/Ecommerce/frontend/src/actions/cartActions.js"],"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_ADD_ITEM_FAIL","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","productId","qty","dispatch","getState","data","get","type","payload","name","image","price","countInStock","product","_id","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","saveShippingAddress","savePaymentMethod"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,aADJ,EAEIC,gBAFJ,EAGIC,kBAHJ,EAIIC,0BAJJ,EAKIC,wBALJ,QAMO,4BANP,C,CAOA;;AACA,OAAO,MAAMC,SAAS,GAAG,CAACC,SAAD,EAAYC,GAAZ,KAAoB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACvE,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMX,KAAK,CAACY,GAAN,CAAW,iBAAgBL,SAAU,EAArC,CAAvB,CADuE,CAEvE;;AACAE,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAEZ,aADD;AAELa,IAAAA,OAAO,EAAE;AAAE;AACPC,MAAAA,IAAI,EAAEJ,IAAI,CAACI,IADN;AAELC,MAAAA,KAAK,EAAEL,IAAI,CAACK,KAFP;AAGLC,MAAAA,KAAK,EAAEN,IAAI,CAACM,KAHP;AAILC,MAAAA,YAAY,EAAEP,IAAI,CAACO,YAJd;AAKLC,MAAAA,OAAO,EAAER,IAAI,CAACS,GALT;AAKc;AACnB;AACAZ,MAAAA;AAPK;AAFJ,GAAD,CAAR;AAYAa,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAAlC,EAfuE,CAeO;AACjF,CAhBM;AAkBP,OAAO,MAAMC,cAAc,GAAIpB,SAAD,IAAe,CAACE,QAAD,EAAWC,QAAX,KAAwB;AACjED,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEX,gBAAR;AAA0BY,IAAAA,OAAO,EAAEP;AAAnC,GAAD,CAAR;AACAc,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAAlC,EAFiE,CAEa;AACjF,CAHM;AAKP,OAAO,MAAME,mBAAmB,GAAIjB,IAAD,IAAWF,QAAD,IAAc;AAAE;AACzDA,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAET,0BAAR;AAAoCU,IAAAA,OAAO,EAAEH;AAA7C,GAAD,CAAR;AACAU,EAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAxC;AACH,CAHM;AAKP,OAAO,MAAMkB,iBAAiB,GAAIlB,IAAD,IAAWF,QAAD,IAAc;AACrDA,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAER,wBAAR;AAAkCS,IAAAA,OAAO,EAAEH;AAA3C,GAAD,CAAR;AACH,CAFM","sourcesContent":["import axios from 'axios';\nimport {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_ADD_ITEM_FAIL,\n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD\n} from '../constants/cartConstants';\n//https://redux.js.org/api/store#getstate\nexport const addToCart = (productId, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${productId}`);\n    //const { cart: { cartItems } } = getState();\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: { //add this product to the cart\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            product: data._id, //add to database\n            //seller: data.seller,\n            qty\n        }\n    });\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems)); //store.js initial\n}\n\nexport const removeFromCart = (productId) => (dispatch, getState) => {\n    dispatch({ type: CART_REMOVE_ITEM, payload: productId });\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems)); //update local storage\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => { //data from ShippingAddress screen\n    dispatch({ type: CART_SAVE_SHIPPING_ADDRESS, payload: data });\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\n  \nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({ type: CART_SAVE_PAYMENT_METHOD, payload: data });\n};\n"]},"metadata":{},"sourceType":"module"}