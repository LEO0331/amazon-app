{"ast":null,"code":"import axios from 'axios';\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_FAIL, USER_DETAILS_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_LIST_SUCCESS, USER_LIST_REQUEST, USER_LIST_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from '../constants/userConstants';\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    }); //send to backend\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    }); //update redux store based on user signin; in app.js use userSignin to auth users\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/signin', {\n      email,\n      password\n    }); //fetch from backend with user info and token\n\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      //same format as detailsProduct in productActions.js\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    //update action\n    const {\n      data\n    } = await axios.put('/api/users/profile', user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    }); //header shows user name from user signin\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_REQUEST,\n    payload: user\n  }); //USER_UPDATE_PROFILE_REQUEST\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.put(`/api/users/${user._id}`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  dispatch({\n    type: USER_LIST_REQUEST\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.get('/api/users', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DELETE_REQUEST,\n    payload: userId\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.delete(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  //remove localstorage in store.js\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  dispatch({\n    type: USER_SIGNOUT\n  }); //document.location.href = '/signin';\n};","map":{"version":3,"sources":["/Users/chenlicheng/Desktop/Ecommerce/frontend/src/actions/userActions.js"],"names":["axios","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_FAIL","USER_DETAILS_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_LIST_SUCCESS","USER_LIST_REQUEST","USER_LIST_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","register","name","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signin","detailsUser","userId","getState","userSignin","userInfo","get","headers","Authorization","token","updateUserProfile","user","put","updateUser","_id","listUsers","deleteUser","delete","signout","removeItem"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n    USER_SIGNIN_REQUEST,\n    USER_SIGNIN_SUCCESS,\n    USER_SIGNIN_FAIL,\n    USER_SIGNOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_LIST_SUCCESS,\n    USER_LIST_REQUEST,\n    USER_LIST_FAIL,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n} from '../constants/userConstants';\n\nexport const register = (name, email, password) => async (dispatch) => {\n    dispatch({type: USER_REGISTER_REQUEST, payload: {email, password}});\n    try {\n        const {data} = await axios.post('/api/users/register', {name, email, password}); //send to backend\n        dispatch({type: USER_REGISTER_SUCCESS, payload: data});\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data}); //update redux store based on user signin; in app.js use userSignin to auth users\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n};\n\nexport const signin = (email, password) => async (dispatch) => {\n    dispatch({type: USER_SIGNIN_REQUEST, payload: {email, password}});\n    try {\n        const {data} = await axios.post('/api/users/signin', {email, password}); //fetch from backend with user info and token\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({ //same format as detailsProduct in productActions.js\n            type: USER_SIGNIN_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n}\n\nexport const detailsUser = (userId) => async (dispatch, getState) => {\n    dispatch({type: USER_DETAILS_REQUEST, payload: userId});\n    const {userSignin: { userInfo }} = getState();\n    try {\n        const { data } = await axios.get(`/api/users/${userId}`, { \n            headers: { Authorization: `Bearer ${userInfo.token}` }\n        });\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    dispatch({type: USER_UPDATE_PROFILE_REQUEST, payload: user});\n    const {userSignin: { userInfo }} = getState();\n    try { //update action\n        const { data } = await axios.put('/api/users/profile', user, { \n            headers: { Authorization: `Bearer ${userInfo.token}` }\n        });\n        dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data }); //header shows user name from user signin\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    dispatch({ type: USER_UPDATE_REQUEST, payload: user }); //USER_UPDATE_PROFILE_REQUEST\n    try {\n        const {userSignin: { userInfo }} = getState();\n        const { data } = await axios.put(`/api/users/${user._id}`, user, { \n            headers: { Authorization: `Bearer ${userInfo.token}` }\n        });\n        dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n    dispatch({ type: USER_LIST_REQUEST });\n    try {\n        const {userSignin: { userInfo }} = getState();\n        const { data } = await axios.get('/api/users', { \n            headers: { Authorization: `Bearer ${userInfo.token}` }\n        });\n        dispatch({ type: USER_LIST_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n}\n\nexport const deleteUser = (userId) => async (dispatch, getState) => {\n    dispatch({ type: USER_DELETE_REQUEST, payload: userId });\n    try {\n        const {userSignin: { userInfo }} = getState();\n        const { data } = await axios.delete(`/api/users/${userId}`, { \n            headers: { Authorization: `Bearer ${userInfo.token}` }\n        });\n        dispatch({ type: USER_DELETE_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n}\n\nexport const signout = () => (dispatch) => { //remove localstorage in store.js\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('cartItems');\n    localStorage.removeItem('shippingAddress');\n    dispatch({type: USER_SIGNOUT});\n    //document.location.href = '/signin';\n};\n\n\n"]},"metadata":{},"sourceType":"module"}