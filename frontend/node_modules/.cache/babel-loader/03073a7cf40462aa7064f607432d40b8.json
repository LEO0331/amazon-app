{"ast":null,"code":"import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk'; //send ajax request in redux actions\n\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDeleteReducer, orderDeliverReducer, orderDetailsReducer, orderListReducer, orderMineListReducer, orderPayReducer } from './reducers/orderReducers';\nimport { productCategoryListReducer, productCreateReducer, productDeleteReducer, productDetailsReducer, productListReducer, productReviewCreateReducer, productUpdateReducer } from './reducers/productReducers';\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userRegisterReducer, userSigninReducer, userTopSellerListReducer, userUpdateProfileReducer, userUpdateReducer } from './reducers/userReducers';\nconst initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n    paymentMethod: 'PayPal'\n  },\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  }\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMineList: orderMineListReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productDelete: productDeleteReducer,\n  orderList: orderListReducer,\n  orderDelete: orderDeleteReducer,\n  orderDeliver: orderDeliverReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  userTopSellersList: userTopSellerListReducer,\n  productCategoryList: productCategoryListReducer,\n  productReviewCreate: productReviewCreateReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/chenlicheng/Desktop/Ecommerce/frontend/src/store.js"],"names":["createStore","compose","applyMiddleware","combineReducers","thunk","cartReducer","orderCreateReducer","orderDeleteReducer","orderDeliverReducer","orderDetailsReducer","orderListReducer","orderMineListReducer","orderPayReducer","productCategoryListReducer","productCreateReducer","productDeleteReducer","productDetailsReducer","productListReducer","productReviewCreateReducer","productUpdateReducer","userDeleteReducer","userDetailsReducer","userListReducer","userRegisterReducer","userSigninReducer","userTopSellerListReducer","userUpdateProfileReducer","userUpdateReducer","initialState","cart","cartItems","localStorage","getItem","JSON","parse","shippingAddress","paymentMethod","userSignin","userInfo","reducer","productList","productDetails","userRegister","orderCreate","orderDetails","orderPay","orderMineList","userDetails","userUpdateProfile","productCreate","productUpdate","productDelete","orderList","orderDelete","orderDeliver","userList","userDelete","userUpdate","userTopSellersList","productCategoryList","productReviewCreate","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAAiC;;AACjC,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,mBAAjD,EAAsEC,mBAAtE,EAA2FC,gBAA3F,EAA6GC,oBAA7G,EAAmIC,eAAnI,QAA0J,0BAA1J;AACA,SAASC,0BAAT,EAAqCC,oBAArC,EAA2DC,oBAA3D,EAAiFC,qBAAjF,EAAwGC,kBAAxG,EAA4HC,0BAA5H,EAAwJC,oBAAxJ,QAAoL,4BAApL;AACA,SAASC,iBAAT,EAA4BC,kBAA5B,EAAgDC,eAAhD,EAAiEC,mBAAjE,EAAsFC,iBAAtF,EAAyGC,wBAAzG,EAAmIC,wBAAnI,EAA6JC,iBAA7J,QAAsL,yBAAtL;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAD3F;AAEJG,IAAAA,eAAe,EAAEJ,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GAAgG,EAF7G;AAGJI,IAAAA,aAAa,EAAE;AAHX,GADa;AAMnBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAEP,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF;AADlF;AANO,CAArB;AAUA,MAAMO,OAAO,GAAGpC,eAAe,CAAC;AAC9BqC,EAAAA,WAAW,EAAEvB,kBADiB;AAE9BwB,EAAAA,cAAc,EAAEzB,qBAFc;AAG9Ba,EAAAA,IAAI,EAAExB,WAHwB;AAI9BgC,EAAAA,UAAU,EAAEb,iBAJkB;AAK9BkB,EAAAA,YAAY,EAAEnB,mBALgB;AAM9BoB,EAAAA,WAAW,EAAErC,kBANiB;AAO9BsC,EAAAA,YAAY,EAAEnC,mBAPgB;AAQ9BoC,EAAAA,QAAQ,EAAEjC,eARoB;AAS9BkC,EAAAA,aAAa,EAAEnC,oBATe;AAU9BoC,EAAAA,WAAW,EAAE1B,kBAViB;AAW9B2B,EAAAA,iBAAiB,EAAEtB,wBAXW;AAY9BuB,EAAAA,aAAa,EAAEnC,oBAZe;AAa9BoC,EAAAA,aAAa,EAAE/B,oBAbe;AAc9BgC,EAAAA,aAAa,EAAEpC,oBAde;AAe9BqC,EAAAA,SAAS,EAAE1C,gBAfmB;AAgB9B2C,EAAAA,WAAW,EAAE9C,kBAhBiB;AAiB9B+C,EAAAA,YAAY,EAAE9C,mBAjBgB;AAkB9B+C,EAAAA,QAAQ,EAAEjC,eAlBoB;AAmB9BkC,EAAAA,UAAU,EAAEpC,iBAnBkB;AAoB9BqC,EAAAA,UAAU,EAAE9B,iBApBkB;AAqB9B+B,EAAAA,kBAAkB,EAAEjC,wBArBU;AAsB9BkC,EAAAA,mBAAmB,EAAE9C,0BAtBS;AAuB9B+C,EAAAA,mBAAmB,EAAE1C;AAvBS,CAAD,CAA/B;AA0BA,MAAM2C,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+C9D,OAAvE;AACA,MAAM+D,KAAK,GAAGhE,WAAW,CACvBuC,OADuB,EAEvBX,YAFuB,EAGvBiC,eAAe,CAAC3D,eAAe,CAACE,KAAD,CAAhB,CAHQ,CAAzB;AAMA,eAAe4D,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk'; //send ajax request in redux actions\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDeleteReducer, orderDeliverReducer, orderDetailsReducer, orderListReducer, orderMineListReducer, orderPayReducer } from './reducers/orderReducers';\nimport { productCategoryListReducer, productCreateReducer, productDeleteReducer, productDetailsReducer, productListReducer, productReviewCreateReducer, productUpdateReducer } from './reducers/productReducers';\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userRegisterReducer, userSigninReducer, userTopSellerListReducer, userUpdateProfileReducer, userUpdateReducer } from './reducers/userReducers';\n\nconst initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n    paymentMethod: 'PayPal'\n  },\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  }\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMineList: orderMineListReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productDelete: productDeleteReducer,\n  orderList: orderListReducer,\n  orderDelete: orderDeleteReducer,\n  orderDeliver: orderDeliverReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  userTopSellersList: userTopSellerListReducer,\n  productCategoryList: productCategoryListReducer,\n  productReviewCreate: productReviewCreateReducer\n})\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer,\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}