{"ast":null,"code":"import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk'; //send ajax request in redux actions\n\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDetailsReducer } from './reducers/orderReducers';\nimport { productDetailsReducer, productListReducer } from './reducers/productReducers';\nimport { userRegisterReducer, userSigninReducer } from './reducers/userReducers';\nconst initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n    paymentMethod: 'PayPal'\n  },\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  }\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/chenlicheng/Desktop/Ecommerce/frontend/src/store.js"],"names":["createStore","compose","applyMiddleware","combineReducers","thunk","cartReducer","orderCreateReducer","orderDetailsReducer","productDetailsReducer","productListReducer","userRegisterReducer","userSigninReducer","initialState","cart","cartItems","localStorage","getItem","JSON","parse","shippingAddress","paymentMethod","userSignin","userInfo","reducer","productList","productDetails","userRegister","orderCreate","orderDetails","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAAiC;;AACjC,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,0BAAxD;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,QAA0D,4BAA1D;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,yBAAvD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAD3F;AAEJG,IAAAA,eAAe,EAAEJ,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GAAgG,EAF7G;AAGJI,IAAAA,aAAa,EAAE;AAHX,GADa;AAMnBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAEP,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF;AADlF;AANO,CAArB;AAUA,MAAMO,OAAO,GAAGpB,eAAe,CAAC;AAC9BqB,EAAAA,WAAW,EAAEf,kBADiB;AAE9BgB,EAAAA,cAAc,EAAEjB,qBAFc;AAG9BK,EAAAA,IAAI,EAAER,WAHwB;AAI9BgB,EAAAA,UAAU,EAAEV,iBAJkB;AAK9Be,EAAAA,YAAY,EAAEhB,mBALgB;AAM9BiB,EAAAA,WAAW,EAAErB,kBANiB;AAO9BsB,EAAAA,YAAY,EAAErB;AAPgB,CAAD,CAA/B;AAUA,MAAMsB,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+C9B,OAAvE;AACA,MAAM+B,KAAK,GAAGhC,WAAW,CACvBuB,OADuB,EAEvBX,YAFuB,EAGvBiB,eAAe,CAAC3B,eAAe,CAACE,KAAD,CAAhB,CAHQ,CAAzB;AAMA,eAAe4B,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk'; //send ajax request in redux actions\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDetailsReducer } from './reducers/orderReducers';\nimport { productDetailsReducer, productListReducer } from './reducers/productReducers';\nimport { userRegisterReducer, userSigninReducer } from './reducers/userReducers';\n\nconst initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n    paymentMethod: 'PayPal'\n  },\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  }\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer\n})\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer,\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}