{"ast":null,"code":"var _jsxFileName = \"/Users/chenlicheng/Desktop/Ecommerce/frontend/src/screens/ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { detailsProduct, updateProduct } from '../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ProductEditScreen(props) {\n  _s();\n\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [image, setImage] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [brand, setBrand] = useState('');\n  const [description, setDescription] = useState('');\n  const [loadingUpload, setLoadingUpload] = useState(false);\n  const [errorUpload, setErrorUpload] = useState('');\n  const productId = props.match.params.id;\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successUpdate) {\n      props.history.push('/productlist');\n    }\n\n    if (!product || product._id !== productId || successUpdate) {\n      //product._id !== productId/successUpdate avoid previous product info loaded\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      dispatch(detailsProduct(productId)); //load from backend; sample product\n    } else {\n      setName(product.name);\n      setPrice(product.price);\n      setImage(product.image);\n      setCategory(product.category);\n      setBrand(product.brand);\n      setCountInStock(product.countInStock);\n      setDescription(product.description);\n    }\n  }, [product, dispatch, productId, successUpdate, props.history]);\n\n  const submitHandler = e => {\n    e.preventDefault(); //dispatch update product\n\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      category,\n      brand,\n      countInStock,\n      description\n    }));\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0]; //upload only the first selected file\n\n    const formData = new FormData(); //https://developer.mozilla.org/en-US/docs/Web/API/FormData/Using_FormData_Objects\n\n    formData.append('image', file); //expect a single file named image at backend\n\n    setLoadingUpload(true);\n\n    try {\n      const {\n        data\n      } = await axios.post('/api/uploads', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      setImage(data);\n      setLoadingUpload(false);\n    } catch (error) {\n      setErrorUpload(error.message);\n      setLoadingUpload(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Edit Product \", productId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 35\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"price\",\n            placeholder: \"Enter price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"image\",\n            placeholder: \"Enter image\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"imageFile\",\n            children: \"Image File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"imageFile\",\n            label: \"Choose Image\",\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), loadingUpload && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 47\n          }, this), errorUpload && /*#__PURE__*/_jsxDEV(MessageBox, {\n            variant: \"danger\",\n            children: errorUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"category\",\n            placeholder: \"Enter category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"brand\",\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"brand\",\n            placeholder: \"Enter brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"countInStock\",\n            children: \"Count In Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"countInStock\",\n            placeholder: \"Enter countInStock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            id: \"description\",\n            rows: \"2\",\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductEditScreen, \"E3zDOmX1QXfzTMMi+Rx6yaUBbs0=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ProductEditScreen;\nexport default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["/Users/chenlicheng/Desktop/Ecommerce/frontend/src/screens/ProductEditScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","axios","detailsProduct","updateProduct","PRODUCT_UPDATE_RESET","LoadingBox","MessageBox","ProductEditScreen","props","name","setName","price","setPrice","image","setImage","category","setCategory","countInStock","setCountInStock","brand","setBrand","description","setDescription","loadingUpload","setLoadingUpload","errorUpload","setErrorUpload","productId","match","params","id","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","userSignin","userInfo","dispatch","history","push","_id","type","submitHandler","e","preventDefault","uploadFileHandler","file","target","files","formData","FormData","append","data","post","headers","Authorization","token","message","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { detailsProduct, updateProduct } from '../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n\nfunction ProductEditScreen(props) {\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [image, setImage] = useState('');\n    const [category, setCategory] = useState('');\n    const [countInStock, setCountInStock] = useState('');\n    const [brand, setBrand] = useState('');\n    const [description, setDescription] = useState('');\n    const [loadingUpload, setLoadingUpload] = useState(false);\n    const [errorUpload, setErrorUpload] = useState('');\n    const productId = props.match.params.id;\n    const productDetails = useSelector(state => state.productDetails);\n    const { loading, error, product } = productDetails;\n    const productUpdate = useSelector(state => state.productUpdate);\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate;\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin;\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (successUpdate) {\n            props.history.push('/productlist');\n        }\n        if (!product || product._id !== productId || successUpdate) { //product._id !== productId/successUpdate avoid previous product info loaded\n            dispatch({ type: PRODUCT_UPDATE_RESET }); \n            dispatch(detailsProduct(productId)); //load from backend; sample product\n        } else {\n            setName(product.name);\n            setPrice(product.price);\n            setImage(product.image);\n            setCategory(product.category);\n            setBrand(product.brand);\n            setCountInStock(product.countInStock);\n            setDescription(product.description);\n        }\n    }, [product, dispatch, productId, successUpdate, props.history]);\n    const submitHandler = (e) => {\n        e.preventDefault(); //dispatch update product\n        dispatch(updateProduct({_id: productId, name, price, image, category, brand, countInStock, description}));\n    }\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]; //upload only the first selected file\n        const formData = new FormData(); //https://developer.mozilla.org/en-US/docs/Web/API/FormData/Using_FormData_Objects\n        formData.append('image', file); //expect a single file named image at backend\n        setLoadingUpload(true);\n        try {\n            const { data } = await axios.post('/api/uploads', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                    Authorization: `Bearer ${userInfo.token}`,\n                },\n            });\n            setImage(data);\n            setLoadingUpload(false);\n        } catch (error) {\n            setErrorUpload(error.message);\n            setLoadingUpload(false);\n        }\n    }\n    return (\n        <div>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>Edit Product {productId}</h1>\n                </div>\n                {loadingUpdate && <LoadingBox />}\n                {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\n                {loading ? (\n                    <LoadingBox />\n                ) : error ? (\n                    <MessageBox variant=\"danger\">{error}</MessageBox>\n                ) : (\n                    <>\n                        <div>\n                            <label htmlFor=\"name\">Name</label>\n                            <input type=\"text\" id=\"name\" placeholder=\"Enter name\" value={name} onChange={e => setName(e.target.value)} />\n                        </div>\n                        <div>\n                            <label htmlFor=\"price\">Price</label>\n                            <input type=\"text\" id=\"price\" placeholder=\"Enter price\" value={price} onChange={e => setPrice(e.target.value)} />\n                        </div>\n                        <div>\n                            <label htmlFor=\"image\">Image</label>\n                            <input type=\"text\" id=\"image\" placeholder=\"Enter image\" value={image} onChange={e => setImage(e.target.value)} />\n                        </div>\n                        <div>\n                            <label htmlFor=\"imageFile\">Image File</label>\n                            <input type=\"file\" id=\"imageFile\" label=\"Choose Image\" onChange={uploadFileHandler} />\n                            {loadingUpload && <LoadingBox />}\n                            {errorUpload && (<MessageBox variant=\"danger\">{errorUpload}</MessageBox>)}\n                        </div>\n                        <div>\n                            <label htmlFor=\"category\">Category</label>\n                            <input type=\"text\" id=\"category\" placeholder=\"Enter category\" value={category} onChange={e => setCategory(e.target.value)} />\n                        </div>\n                        <div>\n                            <label htmlFor=\"brand\">Brand</label>\n                            <input type=\"text\" id=\"brand\" placeholder=\"Enter brand\" value={brand} onChange={e => setBrand(e.target.value)} />\n                        </div>\n                        <div>\n                            <label htmlFor=\"countInStock\">Count In Stock</label>\n                            <input type=\"text\" id=\"countInStock\" placeholder=\"Enter countInStock\" value={countInStock} onChange={e => setCountInStock(e.target.value)} />\n                        </div>\n                        <div>\n                            <label htmlFor=\"description\">Description</label>\n                            <textarea type=\"text\" id=\"description\" rows=\"2\" placeholder=\"Enter description\" value={description} onChange={e => setDescription(e.target.value)} />\n                        </div>\n                        <div>\n                            <label />\n                            <button className=\"primary\" type=\"submit\">Update</button>\n                        </div>\n                    </>\n                )}\n            </form>\n        </div>\n    )\n}\n\nexport default ProductEditScreen;\n"]},"metadata":{},"sourceType":"module"}