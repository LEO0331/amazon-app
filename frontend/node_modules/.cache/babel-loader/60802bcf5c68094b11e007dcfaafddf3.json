{"ast":null,"code":"import axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      } //backend\n\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    }); //orderRouter.js: { message: 'New Order Created', order: createdOrder } sent to frontend\n\n    dispatch({\n      type: CART_EMPTY\n    }); //remove all items from cart\n\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/orders/${orderId}`, {\n      //from backend\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/chenlicheng/Desktop/Ecommerce/frontend/src/actions/orderActions.js"],"names":["axios","CART_EMPTY","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SACIC,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,EAIIC,qBAJJ,EAKIC,qBALJ,EAMIC,kBANJ,QAOO,6BAPP;AASA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEV,oBAAR;AAA8BW,IAAAA,OAAO,EAAEJ;AAAvC,GAAD,CAAR;;AACA,MAAI;AACA,UAAM;AAACK,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA6BJ,QAAQ,EAA3C;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAACiB,IAAN,CAAW,aAAX,EAA0BR,KAA1B,EAAiC;AACpDS,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AAA1C,OAD2C,CACG;;AADH,KAAjC,CAAvB;AAGAV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAET,oBAAR;AAA8BU,MAAAA,OAAO,EAAEG,IAAI,CAACP;AAA5C,KAAD,CAAR,CALA,CAK+D;;AAC/DC,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR,CANA,CAMgC;;AAChCoB,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACH,GARD,CAQE,OAAOC,KAAP,EAAc;AACZb,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAER,iBADD;AAELS,MAAAA,OAAO,EAAEU,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACHF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADjB,GAEHF,KAAK,CAACE;AAJP,KAAD,CAAR;AAMH;AACJ,CAlBM;AAoBP,OAAO,MAAMC,YAAY,GAAIC,OAAD,IAAa,OAAOjB,QAAP,EAAiBC,QAAjB,KAA8B;AACnED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEP,qBAAR;AAA+BQ,IAAAA,OAAO,EAAEc;AAAxC,GAAD,CAAR;AACA,QAAM;AAACb,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AAAb,MAA6BJ,QAAQ,EAA3C;;AACA,MAAI;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAAC4B,GAAN,CAAW,eAAcD,OAAQ,EAAjC,EAAoC;AAAE;AACzDT,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AAA1C;AAD8C,KAApC,CAAvB;AAGAV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEN,qBAAR;AAA+BO,MAAAA,OAAO,EAAEG;AAAxC,KAAD,CAAR;AACH,GALD,CAKE,OAAOO,KAAP,EAAc;AACZb,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEL,kBADD;AAELM,MAAAA,OAAO,EAAEU,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACHF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADjB,GAEHF,KAAK,CAACE;AAJP,KAAD,CAAR;AAMH;AACJ,CAhBM","sourcesContent":["import axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n} from '../constants/orderConstants';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\n    try {\n        const {userSignin: { userInfo }} = getState();\n        const { data } = await axios.post('/api/orders', order, {\n            headers: { Authorization: `Bearer ${userInfo.token}` } //backend\n        });\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order }); //orderRouter.js: { message: 'New Order Created', order: createdOrder } sent to frontend\n        dispatch({ type: CART_EMPTY }); //remove all items from cart\n        localStorage.removeItem('cartItems');\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n}\n\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\n    const {userSignin: { userInfo }} = getState();\n    try {\n        const { data } = await axios.get(`/api/orders/${orderId}`, { //from backend\n            headers: { Authorization: `Bearer ${userInfo.token}` }\n        });\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"module"}