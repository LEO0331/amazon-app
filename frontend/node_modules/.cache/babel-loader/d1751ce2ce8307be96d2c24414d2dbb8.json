{"ast":null,"code":"import axios from 'axios';\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL } from '../constants/productConstants';\nexport const listProducts = ({\n  seller = ''\n}) => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/products?seller=${seller}`); //get products from backend through db\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    }); //dispatch actions: change the state of redux and update homescreen showing products\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/products/${productId}`); //get specific product from server\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState(); //userInfo token\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/products', {}, {\n      //empty obj cuz no data as second param payload, auto create sample data in backend\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    }); //new createdProduct\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteProduct = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST,\n    payload: productId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.delete(`/api/products/${productId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    }); //payload: data\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/chenlicheng/Desktop/Ecommerce/frontend/src/actions/productActions.js"],"names":["axios","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","listProducts","seller","dispatch","type","data","get","payload","error","message","detailsProduct","productId","response","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","updateProduct","put","_id","deleteProduct","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL\n} from '../constants/productConstants';\n\nexport const listProducts = ({seller = ''}) => async (dispatch) => {\n    dispatch({type: PRODUCT_LIST_REQUEST});\n    try {\n        const {data} = await axios.get(`/api/products?seller=${seller}`); //get products from backend through db\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data}) //dispatch actions: change the state of redux and update homescreen showing products\n    } catch (error) {\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.message});\n    }\n};\n\nexport const detailsProduct = (productId) => async (dispatch) => {\n    dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId});\n    try {\n        const {data} = await axios.get(`/api/products/${productId}`); //get specific product from server\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n    dispatch({type: PRODUCT_CREATE_REQUEST});\n    const {userSignin: { userInfo }} = getState(); //userInfo token\n    try {\n        const {data} = await axios.post('/api/products', {}, { //empty obj cuz no data as second param payload, auto create sample data in backend\n            headers: { Authorization: `Bearer ${userInfo.token}` }\n        }); \n        dispatch({type: PRODUCT_CREATE_SUCCESS, payload: data.product}); //new createdProduct\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    dispatch({type: PRODUCT_UPDATE_REQUEST, payload: product});\n    const {userSignin: { userInfo }} = getState();\n    try {\n        const {data} = await axios.put(`/api/products/${product._id}`, product, { \n            headers: { Authorization: `Bearer ${userInfo.token}` }\n        }); \n        dispatch({type: PRODUCT_UPDATE_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n}\n\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\n    dispatch({type: PRODUCT_DELETE_REQUEST, payload: productId});\n    const {userSignin: { userInfo }} = getState();\n    try {\n        const {data} = await axios.delete(`/api/products/${productId}`, { \n            headers: { Authorization: `Bearer ${userInfo.token}` }\n        }); \n        dispatch({type: PRODUCT_DELETE_SUCCESS}); //payload: data\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}