{"ast":null,"code":"var _jsxFileName = \"/Users/chenlicheng/Desktop/Ecommerce/frontend/src/screens/CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { addToCart } from '../actions/cartActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CartScreen(props) {\n  _s();\n\n  //path=\"/cart/:id?\"\n  const productId = props.match.params.id; //https://reactrouter.com/web/api/location\n\n  const qty = props.location.search // /cart/${productId}?qty=${qty}\n  ? Number(props.location.search.split('=')[1]) : 1; //https://reactjs.org/docs/hooks-faq.html#what-do-hooks-mean-for-popular-apis-like-redux-connect-and-react-router\n\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems,\n    error\n  } = cart; //from reducers\n\n  useEffect(() => {\n    //combination of componentDidMount,componentDidUpdate, componentWillUnmount\n    if (productId) {\n      dispatch(addToCart(productId, qty)); //from actions\n    }\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ID: \", productId, \" QTY:\", qty]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartScreen, \"1b/6BcrzFg90k2qO1tRu8krUc0E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["/Users/chenlicheng/Desktop/Ecommerce/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","addToCart","useDispatch","useSelector","CartScreen","props","productId","match","params","id","qty","location","search","Number","split","dispatch","cart","state","cartItems","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAAE;AACzB,QAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAArC,CADuB,CAEvB;;AACA,QAAMC,GAAG,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsB;AAAtB,IACNC,MAAM,CAACR,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsBE,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAD,CADA,GAEN,CAFN,CAHuB,CAMvB;;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,IAAI,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM;AAAEE,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAuBH,IAA7B,CATuB,CASY;;AACnChB,EAAAA,SAAS,CAAC,MAAM;AAAE;AACd,QAAIM,SAAJ,EAAe;AACXS,MAAAA,QAAQ,CAACd,SAAS,CAACK,SAAD,EAAYI,GAAZ,CAAV,CAAR,CADW,CAC0B;AACxC;AACJ,GAJQ,EAIN,CAACK,QAAD,EAAWT,SAAX,EAAsBI,GAAtB,CAJM,CAAT;AAMA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,yBAAQJ,SAAR,WAAwBI,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAtBQN,U;UAOYF,W,EACJC,W;;;KARRC,U;AAwBT,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { addToCart } from '../actions/cartActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction CartScreen(props) { //path=\"/cart/:id?\"\n    const productId = props.match.params.id;\n    //https://reactrouter.com/web/api/location\n    const qty = props.location.search // /cart/${productId}?qty=${qty}\n        ? Number(props.location.search.split('=')[1])\n        : 1;\n    //https://reactjs.org/docs/hooks-faq.html#what-do-hooks-mean-for-popular-apis-like-redux-connect-and-react-router\n    const dispatch = useDispatch();\n    const cart = useSelector(state => state.cart);\n    const { cartItems, error } = cart; //from reducers\n    useEffect(() => { //combination of componentDidMount,componentDidUpdate, componentWillUnmount\n        if (productId) {\n            dispatch(addToCart(productId, qty)); //from actions\n        }\n    }, [dispatch, productId, qty]);\n\n    return (\n        <div>\n            <h1>Cart</h1>\n            <p>ID: {productId} QTY:{qty}</p>\n        </div>\n    )\n}\n\nexport default CartScreen;\n"]},"metadata":{},"sourceType":"module"}