{"ast":null,"code":"import axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_CREATE_RESET } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}` //backend\n\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    }); //orderRouter.js: { message: 'New Order Created', order: createdOrder } sent to frontend\n\n    dispatch({\n      type: CART_EMPTY\n    }); //remove all items from cart\n\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/chenlicheng/Desktop/Ecommerce/frontend/src/actions/orderActions.js"],"names":["axios","CART_EMPTY","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SACIC,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,EAIIC,kBAJJ,QAKO,6BALP;AAOA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAER,oBAAR;AAA8BS,IAAAA,OAAO,EAAEJ;AAAvC,GAAD,CAAR;;AACA,MAAI;AACA,UAAM;AAACK,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA6BJ,QAAQ,EAA3C;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMd,KAAK,CAACe,IAAN,CAAW,aAAX,EAA0BR,KAA1B,EAAiC;AACpDS,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM,EADnC,CACsC;;AADtC;AAD2C,KAAjC,CAAvB;AAKAV,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEP,oBAAR;AAA8BQ,MAAAA,OAAO,EAAEG,IAAI,CAACP;AAA5C,KAAD,CAAR,CAPA,CAO+D;;AAC/DC,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR,CARA,CAQgC;;AAChCkB,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACH,GAVD,CAUE,OAAOC,KAAP,EAAc;AACZb,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,iBADD;AAELO,MAAAA,OAAO,EAAEU,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACHF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADjB,GAEHF,KAAK,CAACE;AAJP,KAAD,CAAR;AAMH;AACJ,CApBM","sourcesContent":["import axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_CREATE_RESET,\n} from '../constants/orderConstants';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\n    try {\n        const {userSignin: { userInfo }} = getState();\n        const { data } = await axios.post('/api/orders', order, {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`, //backend\n            },\n        });\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order }); //orderRouter.js: { message: 'New Order Created', order: createdOrder } sent to frontend\n        dispatch({ type: CART_EMPTY }); //remove all items from cart\n        localStorage.removeItem('cartItems');\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}