{"ast":null,"code":"var _jsxFileName = \"/Users/chenlicheng/Desktop/Ecommerce/frontend/src/screens/HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Products from \"../components/Products\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from '../components/MessageBox';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { listProducts } from '../actions/productActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction HomeScreen() {\n  _s();\n\n  const dispatch = useDispatch();\n  const productList = useSelector(state => state.productList); //from store to reflect on the view\n\n  const {\n    loading,\n    products,\n    error\n  } = productList; //3 values from productList\n\n  useEffect(() => {\n    dispatch(listProducts({})); //return all products without filtering\n  }, [dispatch]); //params => ({foo: \"a\"}); returning the object {foo: \"a\"}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [products.length === 0 && /*#__PURE__*/_jsxDEV(MessageBox, {\n        children: \"No Product Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row center\",\n        children: products.map(product => /*#__PURE__*/_jsxDEV(Products, {\n          product: product\n        }, product._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomeScreen, \"+Kfo5mv+5h4frBKGytIisQkXo2Y=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = HomeScreen;\nexport default HomeScreen;\n/*\n  //https://reactjs.org/docs/hooks-intro.html\n  const [products, setProducts] = useState([]); //use state and other React features without writing a class\n  const [loading, setLoading] = useState(false); //Update Components\n  const [error, setError] = useState(false);\n  // Similar to componentDidMount and componentDidUpdate: Data fetching, setting up a subscription, and manually changing the DOM in React components are all examples of side effects\n  useEffect(() => {\n    // send ajax to backend and fetch products\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const {data} = await axios.get('/api/products'); //backend array transfer to frontend\n        setLoading(false);\n        setProducts(data);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/Users/chenlicheng/Desktop/Ecommerce/frontend/src/screens/HomeScreen.js"],"names":["React","useEffect","Products","LoadingBox","MessageBox","useSelector","useDispatch","listProducts","HomeScreen","dispatch","productList","state","loading","products","error","length","map","product","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,2BAA7B;;;;AAGA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,WAAW,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,WAAhB,CAA/B,CAFoB,CAEyC;;AAC7D,QAAM;AAACE,IAAAA,OAAD;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,MAA6BJ,WAAnC,CAHoB,CAG4B;;AAChDT,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACF,YAAY,CAAC,EAAD,CAAb,CAAR,CADc,CACc;AAC7B,GAFQ,EAEN,CAACE,QAAD,CAFM,CAAT,CAJoB,CAOpB;;AACA,sBACE;AAAA,cAEIG,OAAO,gBACL,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADK,GAEHE,KAAK,gBACP,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAAA,gBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP;AAAA,iBACGD,QAAQ,CAACE,MAAT,KAAoB,CAApB,iBAAyB,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD5B,eAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACCF,QAAQ,CAACG,GAAT,CAAaC,OAAO,iBACnB,QAAC,QAAD;AAA4B,UAAA,OAAO,EAAEA;AAArC,WAAeA,OAAO,CAACC,GAAvB;AAAA;AAAA;AAAA;AAAA,gBADD;AADD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAPN;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA5BQV,U;UACUF,W,EACGD,W;;;KAFbG,U;AA8BT,eAAeA,UAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from 'react';\nimport Products from \"../components/Products\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from '../components/MessageBox';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { listProducts } from '../actions/productActions';\n\n\nfunction HomeScreen() {\n  const dispatch = useDispatch();\n  const productList = useSelector(state => state.productList); //from store to reflect on the view\n  const {loading, products, error} = productList; //3 values from productList\n  useEffect(() => {\n    dispatch(listProducts({})); //return all products without filtering\n  }, [dispatch]);\n  //params => ({foo: \"a\"}); returning the object {foo: \"a\"}\n  return (\n    <div>\n      {\n        loading ? (\n          <LoadingBox />\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <>\n            {products.length === 0 && <MessageBox>No Product Found</MessageBox>}\n            <div className=\"row center\">\n            {products.map(product => (\n              <Products key={product._id} product={product} />\n            ))}\n            </div>\n          </>\n        )\n      }\n    </div>\n  )\n}\n\nexport default HomeScreen;\n\n/*\n  //https://reactjs.org/docs/hooks-intro.html\n  const [products, setProducts] = useState([]); //use state and other React features without writing a class\n  const [loading, setLoading] = useState(false); //Update Components\n  const [error, setError] = useState(false);\n  // Similar to componentDidMount and componentDidUpdate: Data fetching, setting up a subscription, and manually changing the DOM in React components are all examples of side effects\n  useEffect(() => {\n    // send ajax to backend and fetch products\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const {data} = await axios.get('/api/products'); //backend array transfer to frontend\n        setLoading(false);\n        setProducts(data);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n*/"]},"metadata":{},"sourceType":"module"}